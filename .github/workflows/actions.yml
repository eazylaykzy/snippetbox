name: Snippetbox

on:
  push:
    branches: [ master ]
    pull_request:
      branches: [ master ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: "Mysql Setup"
        run: |
          sudo /etc/init.d/mysql start
          mysql -e "CREATE DATABASE ${{ secrets.DB_DATABASE }} CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci; CREATE USER 'web'@'localhost';GRANT SELECT, INSERT, UPDATE ON ${{ secrets.DB_DATABASE }}.* TO 'web'@'localhost';ALTER USER 'web'@'localhost' IDENTIFIED BY '1234';" -u${{ secrets.DB_USER }} -p${{ secrets.DB_PASSWORD }}

      - name: Build
        run: go build -o ./cmd/web ./...

  test:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: "Mysql Setup"
        run: |
          sudo /etc/init.d/mysql start
          mysql -e "CREATE DATABASE ${{ secrets.TEST_DB_DATABASE }} CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci; CREATE USER '${{ secrets.TEST_DB_USER }}'@'localhost'; GRANT SELECT, DROP, ALTER, INDEX, CREATE, INSERT, UPDATE, DELETE ON ${{ secrets.TEST_DB_DATABASE }}.* TO '${{ secrets.TEST_DB_USER }}'@'localhost';ALTER USER '${{ secrets.TEST_DB_USER }}'@'localhost' IDENTIFIED BY '${{ secrets.DB_TEST_PASSWORD }}';" -u${{ secrets.DB_USER }} -p${{ secrets.DB_PASSWORD }}

      - name: Test
        run: go test -v ./...

      - name: "Artifact"
        uses: actions/upload-artifact@v2
        with:
          name: snippetbox
          path: cmd/web

  coverage:
    runs-on: ubuntu-latest
    needs: [ build ]
    name: Update coverage badge
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
          fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.

      - name: Setup go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: "Mysql Setup"
        run: |
          sudo /etc/init.d/mysql start
          mysql -e "CREATE DATABASE ${{ secrets.TEST_DB_DATABASE }} CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci; CREATE USER '${{ secrets.TEST_DB_USER }}'@'localhost'; GRANT SELECT, DROP, ALTER, INDEX, CREATE, INSERT, UPDATE, DELETE ON ${{ secrets.TEST_DB_DATABASE }}.* TO '${{ secrets.TEST_DB_USER }}'@'localhost';ALTER USER '${{ secrets.TEST_DB_USER }}'@'localhost' IDENTIFIED BY '${{ secrets.DB_TEST_PASSWORD }}';" -u${{ secrets.DB_USER }} -p${{ secrets.DB_PASSWORD }}

      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Run Test
        run: |
          go test -v ./... -covermode=count -coverprofile=coverage.out
          go tool cover -func=coverage.out -o=coverage.out

      - name: Go Coverage Badge  # Pass the `coverage.out` output to this action
        uses: tj-actions/coverage-badge-go@v1.1
        with:
          filename: coverage.out

      - name: Verify Changed files
        uses: tj-actions/verify-changed-files@v8.1
        id: verify-changed-files
        with:
          files: README.MD

      - name: Commit changes
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.MD
          git commit -m "chore: Updated coverage badge."

      - name: Push changes
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ github.token }}
          branch: ${{ github.head_ref }}